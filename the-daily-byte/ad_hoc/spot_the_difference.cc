/**
 * You are given two strings, s and t which only consist of lowercase letters.
 * t is generated by shuffling the letters in s as well as potentially adding
 * an additional random character. Return the letter that was randomly added
 * to t if it exists, otherwise, return ' '.
 * Note: You may assume that at most one additional character can be added to
 * t.
 *
 */

#include <cassert>
#include <string>
#include <unordered_map>
#include <algorithm>

using std::string;
using std::unordered_map;

char spot_the_difference(string s, string t)
{
    size_t s_len = s.size();
    size_t t_len = t.size();
    unordered_map<char, int> m;

    if (t_len == s_len) return ' ';
    else if (t_len > s_len) {
        for (size_t i = 0; i < s_len; i++) {
            if (m.find(s[i]) != m.end()) m[s[i]]++;
            else m[s[i]] = 1;
        }

        for (size_t i = 0; i < t_len; i++) {
            if (m.find(t[i]) == m.end()) return t[i];
        }
    } else {

        for (size_t i = 0; i < t_len; i++) {
            if (m.find(t[i]) != m.end()) m[t[i]]++;
            else m[t[i]] = 1;
        }

        for (size_t i = 0; i < s_len; i++) {
            if (m.find(s[i]) == m.end()) return s[i];
        }
    }
}


int main()
{
    string tc1_s("foobar");
    string tc1_t("barfoot");
    assert(spot_the_difference(tc1_s, tc1_t) == 't');

    string tc2_s("ide");
    string tc2_t("idea");
    assert(spot_the_difference(tc2_s, tc2_t) == 'a');

    string tc3_s("coding");
    string tc3_t("ingcod");
    assert(spot_the_difference(tc3_s, tc3_t) == ' ');
    return 0;
}
